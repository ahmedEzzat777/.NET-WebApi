// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgWebApi.Data;

namespace RpgWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201122135605_dataseedingfix")]
    partial class dataseedingfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 2
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 235, 123, 154, 238, 172, 249, 0, 101, 63, 115, 189, 24, 81, 72, 171, 242, 236, 157, 2, 226, 233, 204, 76, 134, 117, 111, 33, 0, 176, 130, 246, 46, 27, 121, 243, 72, 235, 225, 47, 4, 244, 162, 174, 208, 253, 62, 195, 64, 237, 3, 103, 196, 68, 29, 124, 189, 240, 58, 236, 41, 50, 17, 187, 145 },
                            PasswordSalt = new byte[] { 46, 93, 50, 197, 74, 210, 250, 204, 29, 32, 243, 124, 126, 3, 239, 218, 201, 26, 66, 29, 173, 149, 37, 172, 63, 207, 0, 137, 152, 42, 175, 34, 149, 107, 60, 148, 47, 148, 207, 36, 64, 35, 137, 159, 9, 40, 62, 116, 195, 73, 85, 190, 147, 184, 186, 249, 130, 182, 247, 244, 248, 48, 66, 181, 5, 215, 106, 19, 205, 61, 49, 27, 201, 158, 240, 103, 187, 188, 20, 78, 39, 35, 186, 1, 161, 167, 194, 255, 1, 168, 167, 129, 149, 183, 112, 121, 57, 194, 25, 17, 16, 242, 99, 105, 103, 65, 147, 74, 165, 62, 204, 58, 86, 130, 119, 213, 119, 58, 38, 86, 174, 178, 106, 137, 107, 189, 112, 165 },
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 235, 123, 154, 238, 172, 249, 0, 101, 63, 115, 189, 24, 81, 72, 171, 242, 236, 157, 2, 226, 233, 204, 76, 134, 117, 111, 33, 0, 176, 130, 246, 46, 27, 121, 243, 72, 235, 225, 47, 4, 244, 162, 174, 208, 253, 62, 195, 64, 237, 3, 103, 196, 68, 29, 124, 189, 240, 58, 236, 41, 50, 17, 187, 145 },
                            PasswordSalt = new byte[] { 46, 93, 50, 197, 74, 210, 250, 204, 29, 32, 243, 124, 126, 3, 239, 218, 201, 26, 66, 29, 173, 149, 37, 172, 63, 207, 0, 137, 152, 42, 175, 34, 149, 107, 60, 148, 47, 148, 207, 36, 64, 35, 137, 159, 9, 40, 62, 116, 195, 73, 85, 190, 147, 184, 186, 249, 130, 182, 247, 244, 248, 48, 66, 181, 5, 215, 106, 19, 205, 61, 49, 27, 201, 158, 240, 103, 187, 188, 20, 78, 39, 35, 186, 1, 161, 167, 194, 255, 1, 168, 167, 129, 149, 183, 112, 121, 57, 194, 25, 17, 16, 242, 99, 105, 103, 65, 147, 74, 165, 62, 204, 58, 86, 130, 119, 213, 119, 58, 38, 86, 174, 178, 106, 137, 107, 189, 112, 165 },
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 30,
                            Name = "sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 40,
                            Name = "short sword"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.HasOne("RpgWebApi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RpgWebApi.Models.CharacterSkill", b =>
                {
                    b.HasOne("RpgWebApi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgWebApi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("RpgWebApi.Models.Weapon", b =>
                {
                    b.HasOne("RpgWebApi.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("RpgWebApi.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("RpgWebApi.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("RpgWebApi.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
