using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace RpgWebApi.Migrations
{
    public partial class dataseedingfix : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 235, 123, 154, 238, 172, 249, 0, 101, 63, 115, 189, 24, 81, 72, 171, 242, 236, 157, 2, 226, 233, 204, 76, 134, 117, 111, 33, 0, 176, 130, 246, 46, 27, 121, 243, 72, 235, 225, 47, 4, 244, 162, 174, 208, 253, 62, 195, 64, 237, 3, 103, 196, 68, 29, 124, 189, 240, 58, 236, 41, 50, 17, 187, 145 }, new byte[] { 46, 93, 50, 197, 74, 210, 250, 204, 29, 32, 243, 124, 126, 3, 239, 218, 201, 26, 66, 29, 173, 149, 37, 172, 63, 207, 0, 137, 152, 42, 175, 34, 149, 107, 60, 148, 47, 148, 207, 36, 64, 35, 137, 159, 9, 40, 62, 116, 195, 73, 85, 190, 147, 184, 186, 249, 130, 182, 247, 244, 248, 48, 66, 181, 5, 215, 106, 19, 205, 61, 49, 27, 201, 158, 240, 103, 187, 188, 20, 78, 39, 35, 186, 1, 161, 167, 194, 255, 1, 168, 167, 129, 149, 183, 112, 121, 57, 194, 25, 17, 16, 242, 99, 105, 103, 65, 147, 74, 165, 62, 204, 58, 86, 130, 119, 213, 119, 58, 38, 86, 174, 178, 106, 137, 107, 189, 112, 165 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt", "UserName" },
                values: new object[] { new byte[] { 235, 123, 154, 238, 172, 249, 0, 101, 63, 115, 189, 24, 81, 72, 171, 242, 236, 157, 2, 226, 233, 204, 76, 134, 117, 111, 33, 0, 176, 130, 246, 46, 27, 121, 243, 72, 235, 225, 47, 4, 244, 162, 174, 208, 253, 62, 195, 64, 237, 3, 103, 196, 68, 29, 124, 189, 240, 58, 236, 41, 50, 17, 187, 145 }, new byte[] { 46, 93, 50, 197, 74, 210, 250, 204, 29, 32, 243, 124, 126, 3, 239, 218, 201, 26, 66, 29, 173, 149, 37, 172, 63, 207, 0, 137, 152, 42, 175, 34, 149, 107, 60, 148, 47, 148, 207, 36, 64, 35, 137, 159, 9, 40, 62, 116, 195, 73, 85, 190, 147, 184, 186, 249, 130, 182, 247, 244, 248, 48, 66, 181, 5, 215, 106, 19, 205, 61, 49, 27, 201, 158, 240, 103, 187, 188, 20, 78, 39, 35, 186, 1, 161, 167, 194, 255, 1, 168, 167, 129, 149, 183, 112, 121, 57, 194, 25, 17, 16, 242, 99, 105, 103, 65, 147, 74, 165, 62, 204, 58, 86, 130, 119, 213, 119, 58, 38, 86, 174, 178, 106, 137, 107, 189, 112, 165 }, "User2" });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 3, 148, 139, 75, 8, 48, 156, 239, 231, 63, 100, 138, 118, 228, 7, 113, 6, 158, 198, 125, 234, 129, 63, 247, 227, 112, 202, 61, 124, 29, 2, 210, 54, 229, 80, 178, 85, 151, 194, 2, 90, 52, 242, 113, 193, 178, 143, 26, 252, 205, 195, 151, 46, 133, 238, 179, 179, 183, 104, 132, 218, 217, 174, 3 }, new byte[] { 55, 173, 211, 24, 248, 68, 156, 62, 109, 148, 219, 222, 78, 120, 167, 245, 43, 150, 235, 70, 72, 159, 172, 179, 225, 239, 137, 88, 90, 55, 226, 183, 181, 193, 101, 59, 1, 192, 244, 25, 15, 15, 30, 201, 47, 131, 92, 172, 94, 134, 88, 249, 203, 82, 240, 165, 101, 255, 177, 228, 81, 219, 172, 74, 146, 167, 189, 154, 213, 13, 204, 41, 238, 255, 168, 102, 14, 53, 236, 243, 84, 109, 100, 230, 200, 113, 19, 241, 75, 66, 202, 86, 183, 98, 99, 33, 160, 130, 1, 180, 10, 128, 127, 227, 116, 233, 25, 130, 72, 52, 62, 191, 126, 207, 106, 95, 75, 61, 64, 169, 60, 171, 117, 222, 136, 217, 146, 9 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt", "UserName" },
                values: new object[] { new byte[] { 3, 148, 139, 75, 8, 48, 156, 239, 231, 63, 100, 138, 118, 228, 7, 113, 6, 158, 198, 125, 234, 129, 63, 247, 227, 112, 202, 61, 124, 29, 2, 210, 54, 229, 80, 178, 85, 151, 194, 2, 90, 52, 242, 113, 193, 178, 143, 26, 252, 205, 195, 151, 46, 133, 238, 179, 179, 183, 104, 132, 218, 217, 174, 3 }, new byte[] { 55, 173, 211, 24, 248, 68, 156, 62, 109, 148, 219, 222, 78, 120, 167, 245, 43, 150, 235, 70, 72, 159, 172, 179, 225, 239, 137, 88, 90, 55, 226, 183, 181, 193, 101, 59, 1, 192, 244, 25, 15, 15, 30, 201, 47, 131, 92, 172, 94, 134, 88, 249, 203, 82, 240, 165, 101, 255, 177, 228, 81, 219, 172, 74, 146, 167, 189, 154, 213, 13, 204, 41, 238, 255, 168, 102, 14, 53, 236, 243, 84, 109, 100, 230, 200, 113, 19, 241, 75, 66, 202, 86, 183, 98, 99, 33, 160, 130, 1, 180, 10, 128, 127, 227, 116, 233, 25, 130, 72, 52, 62, 191, 126, 207, 106, 95, 75, 61, 64, 169, 60, 171, 117, 222, 136, 217, 146, 9 }, "User1" });
        }
    }
}
