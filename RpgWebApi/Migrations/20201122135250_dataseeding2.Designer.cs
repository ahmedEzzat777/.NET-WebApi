// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgWebApi.Data;

namespace RpgWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201122135250_dataseeding2")]
    partial class dataseeding2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 10,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 2
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 3, 148, 139, 75, 8, 48, 156, 239, 231, 63, 100, 138, 118, 228, 7, 113, 6, 158, 198, 125, 234, 129, 63, 247, 227, 112, 202, 61, 124, 29, 2, 210, 54, 229, 80, 178, 85, 151, 194, 2, 90, 52, 242, 113, 193, 178, 143, 26, 252, 205, 195, 151, 46, 133, 238, 179, 179, 183, 104, 132, 218, 217, 174, 3 },
                            PasswordSalt = new byte[] { 55, 173, 211, 24, 248, 68, 156, 62, 109, 148, 219, 222, 78, 120, 167, 245, 43, 150, 235, 70, 72, 159, 172, 179, 225, 239, 137, 88, 90, 55, 226, 183, 181, 193, 101, 59, 1, 192, 244, 25, 15, 15, 30, 201, 47, 131, 92, 172, 94, 134, 88, 249, 203, 82, 240, 165, 101, 255, 177, 228, 81, 219, 172, 74, 146, 167, 189, 154, 213, 13, 204, 41, 238, 255, 168, 102, 14, 53, 236, 243, 84, 109, 100, 230, 200, 113, 19, 241, 75, 66, 202, 86, 183, 98, 99, 33, 160, 130, 1, 180, 10, 128, 127, 227, 116, 233, 25, 130, 72, 52, 62, 191, 126, 207, 106, 95, 75, 61, 64, 169, 60, 171, 117, 222, 136, 217, 146, 9 },
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 3, 148, 139, 75, 8, 48, 156, 239, 231, 63, 100, 138, 118, 228, 7, 113, 6, 158, 198, 125, 234, 129, 63, 247, 227, 112, 202, 61, 124, 29, 2, 210, 54, 229, 80, 178, 85, 151, 194, 2, 90, 52, 242, 113, 193, 178, 143, 26, 252, 205, 195, 151, 46, 133, 238, 179, 179, 183, 104, 132, 218, 217, 174, 3 },
                            PasswordSalt = new byte[] { 55, 173, 211, 24, 248, 68, 156, 62, 109, 148, 219, 222, 78, 120, 167, 245, 43, 150, 235, 70, 72, 159, 172, 179, 225, 239, 137, 88, 90, 55, 226, 183, 181, 193, 101, 59, 1, 192, 244, 25, 15, 15, 30, 201, 47, 131, 92, 172, 94, 134, 88, 249, 203, 82, 240, 165, 101, 255, 177, 228, 81, 219, 172, 74, 146, 167, 189, 154, 213, 13, 204, 41, 238, 255, 168, 102, 14, 53, 236, 243, 84, 109, 100, 230, 200, 113, 19, 241, 75, 66, 202, 86, 183, 98, 99, 33, 160, 130, 1, 180, 10, 128, 127, 227, 116, 233, 25, 130, 72, 52, 62, 191, 126, 207, 106, 95, 75, 61, 64, 169, 60, 171, 117, 222, 136, 217, 146, 9 },
                            UserName = "User1"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 30,
                            Name = "sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 40,
                            Name = "short sword"
                        });
                });

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.HasOne("RpgWebApi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RpgWebApi.Models.CharacterSkill", b =>
                {
                    b.HasOne("RpgWebApi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgWebApi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("RpgWebApi.Models.Weapon", b =>
                {
                    b.HasOne("RpgWebApi.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("RpgWebApi.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RpgWebApi.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("RpgWebApi.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("RpgWebApi.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
